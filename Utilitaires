//-------------------------------------------------------------
//------------------Fonctions utilitaires----------------------
//-------------------------------------------------------------
include("GlobalVar");


function getDamage(ID, strength) {	
	var damage = [];
	
	if(isChip(ID)) {
	
		var chipEffects = getChipEffects(ID);
		
		for (var chipEffect in chipEffects) {
			if(chipEffect[0] == EFFECT_DAMAGE) {
				var chipDamage = [];
				chipDamage["MIN"] = chipEffect[1] * (1+strength/100);
				chipDamage["MAX"] = chipEffect[2] * (1+strength/100);
				push(damage, chipDamage);
			}
		}
	} else if (isWeapon(ID)) {
		var weaponEffects = getWeaponEffects(ID);
		
		for (var weaponEffect in weaponEffects) {
			if(weaponEffect[0] == EFFECT_DAMAGE) {
				var weaponDamage = [];
				weaponDamage["MIN"] = weaponEffect[1] * (1+strength/100);
				weaponDamage["MAX"] = weaponEffect[2] * (1+strength/100);
				push(damage, weaponDamage);
			}	
		}
	} else {
		debug("Ni puce ni arme !!");
	}
	return damage;
}

function calculateDamage(leekID, damage) {	
	return damage * (1 - getRelativeShield(leekID) / 100) - getAbsoluteShield(leekID);
}


function canUseIfMoving(ID, targetCell, user, mark) {
	if(isWeapon(ID)) {
		var cellsToUseWeapon = getCellsToUseWeaponOnCell(ID, targetCell);
		var MPAvailable = getMP(user);
		if (cellsToUseWeapon != null){ 
			var shortestPath = -1;
			var closestCell = -1;
			for (var i = 0; i < count(cellsToUseWeapon); i++){
				var pathLength = getPathLength(getCell(user), cellsToUseWeapon[i]);
				if (pathLength != null){
					if (pathLength <= MPAvailable ){
						if (shortestPath == -1 || pathLength < shortestPath){
							shortestPath = pathLength;
							closestCell = cellsToUseWeapon[i];
						}
					}
				}
			}
			if (closestCell != -1){
				return closestCell;
			}
		}
		else { 
			debug("cellsToUseWeapon is null");
		}
	}
	else if (isChip(ID)) {
		var cellsToUseChip = getCellsToUseChipOnCell(ID, targetCell);
		var MPAvailable = getMP(user);
		if (cellsToUseChip != null){ 
			var shortestPath = -1;
			var closestCell = -1;
			for (var i = 0; i < count(cellsToUseChip); i++){
				var pathLength = getPathLength(getCell(user), cellsToUseChip[i]);
				if (pathLength != null){
					if (pathLength <= MPAvailable ){
						if (shortestPath == -1 || pathLength < shortestPath){
							shortestPath = pathLength;
							closestCell = cellsToUseChip[i];
						}
					}
				}
			}
			if (closestCell != -1){
				return closestCell;
			}
		}
		else { 
			debug("cellsToUseChip is null");
		}
	}
	else {
		debug("Ni puce ni arme !!");
	}
	return -1;
}

function leekHasChip(chipID, leekID){
	var chips = getChips(leekID);
	
	if (chips != null){
		for (var chip in chips){
			if (chip == chipID){
				return true;
			}
		}
	}
	else {
		debug ("chips is NULL");
	}
	return false;
}
